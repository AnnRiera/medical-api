// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  @@map("user")
  id                    Int          @id @default(autoincrement())
  email                 String       @unique
  password              String
  token                 String?
  lastLogin             DateTime?    @map("last_login")
  createdAt             DateTime     @map("created_at")      @default(now())
  updatedAt             DateTime?    @map("updated_at")
  deletedAt             DateTime?    @map("deleted_at")
  patient               Patient?
}

model Patient {
  @@map("patient")
  id                    Int              @id @default(autoincrement())
  firstName             String           @map("first_name")
  lastName              String           @map("last_name")
  gender                String
  birthday              DateTime
  createdAt             DateTime         @map("created_at")      @default(now())
  updatedAt             DateTime?        @map("updated_at")
  deletedAt             DateTime?        @map("deleted_at")
  user                  User             @relation(fields: [userId], references: [id])
  userId                Int              @unique @map("user_id")
  diagnosis             DiagnosisByPatient[]
}

model Symptom {
  @@map("symptom")
  id                    Int              @id @default(autoincrement())
  symptomId             Int              @unique
  name                  String
  diagnosis             SymptomByDiagnosis[]
  createdAt             DateTime         @map("created_at")      @default(now())
  updatedAt             DateTime?        @map("updated_at")
  deletedAt             DateTime?        @map("deleted_at")
}

model SymptomByDiagnosis {
  @@map("symptom_by_diagnose")
  diagnosis              Diagnosis     @relation(fields: [diagnosisId], references: [id])
  diagnosisId            Int           @map("diagnosis_id")
  symptom                Symptom       @relation(fields: [symptomId], references: [id])
  symptomId              Int           @map("symptom_id")

  @@id([diagnosisId, symptomId])
}

model Diagnosis {
  @@map("diagnosis")
  id                    Int                           @id @default(autoincrement())
  diagnosisId           Int                           @map("diagnosis_id")
  name                  String      
  profName              String                        @map("prof_name")
  icd                   String
  icdName               String                        @map("icd_name")
  accuracy              Int
  symptoms              SymptomByDiagnosis[]
  specialisations       Json
  patient               DiagnosisByPatient[]
  createdAt             DateTime         @map("created_at")      @default(now())
}

model DiagnosisByPatient {
  @@map("diagnose_by_patient")
  id                    Int          @id @default(autoincrement())
  patient               Patient      @relation(fields: [patientId], references: [id])
  patientId             Int          @map("patient_id")
  diagnosis             Diagnosis    @relation(fields: [diagnoseId], references: [id])
  diagnoseId            Int          @map("diagnose_id")
}